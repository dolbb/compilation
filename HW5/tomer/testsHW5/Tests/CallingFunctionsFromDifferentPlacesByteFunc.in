//Call can come from Statement and from Exp.

byte funcByte() { 
	return 9 b;
	print("funcByte\n");
}

byte helperFunc1() { 
	return funcByte();
}

byte helperFunc2() { 
	return (funcByte());
}

void funcHelper1(byte a) {
	print("funcHelper1-1\n");
	printi(a);
	print("funcHelper1-2\n");
}

void funcHelper2(byte a, byte bb) {
	print("funcHelper2-1\n");
	printi(a);
	print("funcHelper2-2\n");
	printi(bb);
	print("funcHelper2-3\n");
}


void main() {
	
	{funcByte();}
		
	byte z1 = funcByte();
	printi(z1);
	print("\n");
	print("delimiter1\n");
	byte z2 = (funcByte());
	printi(z2);
	print("\n");
	print("delimiter2\n");
	
	byte c;
	c = funcByte();
	printi(c);
	print("\n");
	print("delimiter3\n");
	c = (funcByte());
	printi(c);
	print("\n");
	print("delimiter4\n");
	
	funcByte();
	print("delimiter5\n");
	printi(funcByte());
	print("delimiter6\n");
	
	//return funcByte():
	helperFunc1();
	print("delimiter7\n");
	//return (funcByte()):
	helperFunc2();
	print("delimiter8\n");
	if (funcByte() == 9 b )       { print("insideIf1\n"); }
	print("delimiter9\n");
	if (not (funcByte() == 9b))   { print("insideIf2\n"); }
	print("delimiter10\n");
	if (((funcByte() == 9b)))     { print("insideIf3\n"); }
	print("delimiter11\n");
	if (not ((funcByte() == 9b))) { print("insideIf4\n"); }
	print("delimiter12\n");
	if (true) funcByte();
	print("delimiter13\n");
	if (true) { funcByte(); }
	print("delimiter14\n");
	
	while ((funcByte() == 9b))       { print("insideWhile1"); break;}
	print("delimiter15\n");
	while (not ((funcByte() == 9b)))   { print("insideWhile2"); break;}
	print("delimiter16\n");
	while (((funcByte() == 9b)))     { print("insideWhile3"); break;}
	print("delimiter17\n");
	while (not ((funcByte() == 9b))) { print("insideWhile4"); break;}
	print("delimiter18\n");
	
	while (true) { funcByte(); break; }
	print("delimiter19\n");
	
	switch (funcByte())   { case 9: {print("insideCase2"); } break; };
	print("delimiter20\n");
	switch (funcByte())   { case 2: {print("insideCase2"); } break; };
	print("delimiter21\n");
	switch ((funcByte())) { case 9: {print("insideCase2"); } break; };
	print("delimiter22\n");
	switch ((funcByte())) { case 2: {print("insideCase2"); } break; };
	print("delimiter23\n");
	
	byte u = 2b;
	switch (u) { case 2: { funcByte(); } break; };
	print("delimiter23\n");
	switch (u) { case 2:   funcByte();   break; };
	print("delimiter24\n");
	
	byte ub = 2b;
	switch (ub) { case 2b: { funcByte(); } break; };
	print("delimiter25\n");
	switch (ub) { case 2b:   funcByte();   break; };
	print("delimiter26\n");
	
	funcHelper1(funcByte());
	funcHelper2(funcByte(),funcByte());
	
	//Need to check every exp with (funcByte())
	
	byte bb1 = funcByte()*funcByte(); printi(bb1);
	
	byte bb2 = funcByte()/funcByte(); printi(bb2);
	
	byte bb3 = funcByte()+funcByte(); printi(bb3);
	
	byte bb4 = funcByte()-funcByte(); printi(bb4);
	
	//bool bb5 =     not funcByte();   if (bb5) { print("true1\n"); } else { print("false1\n");}
	//bool aa5 = not (not funcByte()); if (aa5) { print("true2\n"); } else { print("false\n");}
	
	//bool bb6 = funcByte() and funcByte();       if (bb6) { print("true3\n"); } else { print("false3\n");}
	//bool aa6 = not (funcByte() and funcByte()); if (aa6) { print("true4\n"); } else { print("false4\n");}
	
	//bool bb7 = funcByte() or funcByte();       if (bb7) { print("true5\n"); } else { print("false5\n");}
	//bool aa7 = not (funcByte() or funcByte()); if (aa7) { print("true6\n"); } else { print("false6\n");}
	
	bool bb8 = funcByte() > funcByte();       if (bb8) { print("true7\n"); } else { print("false7\n");}
	bool aa8 = not (funcByte() > funcByte()); if (aa8) { print("true8\n"); } else { print("false8\n");}
	
	bool bb9 = funcByte() >= funcByte();       if (bb9) { print("true9\n"); } else { print("false9\n");}
	bool aa9 = not (funcByte() >= funcByte()); if (aa9) { print("true99\n"); } else { print("false99\n");}
		
	bool bb10 = funcByte() < funcByte();        if (bb10) { print("true10\n"); } else { print("false10\n");}
	bool aa10 = not (funcByte() < funcByte());  if (aa10) { print("true11\n"); } else { print("false11\n");}
	
	bool bb11 = funcByte() <= funcByte();       if (bb11) { print("true12\n"); } else { print("false12\n");}
	bool aa11 = not (funcByte() <= funcByte()); if (aa11) { print("true13\n"); } else { print("false13\n");}
	
	bool bb12 = funcByte() == funcByte(); if (bb12) { print("true14\n"); } else { print("false14\n");}
	bool aa12 = (funcByte() == funcByte()); if (aa12) { print("true15\n"); } else { print("false15\n");}
}