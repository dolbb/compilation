Grammar

    0 $accept: Program $end

    1 $@1: %empty

    2 Program: $@1 Funcs

    3 Funcs: %empty
    4      | FuncDecl Funcs

    5 $@2: %empty

    6 $@3: %empty

    7 FuncDecl: Try RetType ID $@2 LPAREN Formals RPAREN $@3 LBRACE Statements RBRACE

    8 Try: %empty

    9 RetType: Type
   10        | VOID

   11 Formals: %empty
   12        | FormalsList

   13 FormalsList: FormalDecl

   14 $@4: %empty

   15 FormalsList: FormalDecl $@4 COMMA FormalsList

   16 FormalDecl: Type ID

   17 Statements: Statement
   18           | Statements M Statement

   19 $@5: %empty

   20 Statement: LBRACE $@5 Statements RBRACE
   21          | Type ID SC
   22          | Type ID ASSIGN Exp SC
   23          | ID ASSIGN Exp SC
   24          | Call SC
   25          | RETURN SC
   26          | RETURN Exp SC
   27          | IF LPAREN BoolExpIf RPAREN M Statement

   28 $@6: %empty

   29 Statement: IF LPAREN BoolExpIf RPAREN M Statement ELSE N $@6 M Statement

   30 $@7: %empty

   31 Statement: WHILE M LPAREN Exp RPAREN $@7 M Statement
   32          | BREAK SC

   33 $@8: %empty

   34 Statement: SWITCH LPAREN Exp N RPAREN $@8 LBRACE CaseList RBRACE SC

   35 BoolExpIf: Exp

   36 CaseList: CaseStat CaseList
   37         | CaseStat

   38 $@9: %empty

   39 $@10: %empty

   40 CaseStat: CASE NUM COLON $@9 M Statement $@10 BREAK SC

   41 $@11: %empty

   42 $@12: %empty

   43 CaseStat: CASE NUM B $@11 COLON M Statement $@12 BREAK SC

   44 @13: %empty

   45 Call: ID LPAREN @13 ExpList RPAREN
   46     | ID LPAREN RPAREN

   47 ExpList: Exp

   48 $@14: %empty

   49 ExpList: Exp $@14 COMMA ExpList

   50 Type: INT
   51     | BYTE
   52     | BOOL

   53 Exp: LPAREN Exp RPAREN
   54    | Exp BINOP_MULT Exp
   55    | Exp BINOP_ADD Exp
   56    | ID
   57    | Call
   58    | NUM
   59    | NUM B
   60    | STRING
   61    | TRUE
   62    | FALSE
   63    | NOT Exp
   64    | Exp AND M Exp
   65    | Exp OR M Exp
   66    | Exp RELOP_COMP Exp
   67    | Exp RELOP_EQ Exp

   68 M: %empty

   69 N: %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
VOID (258) 10
INT (259) 50
BYTE (260) 51
BOOL (261) 52
BREAK (262) 32 40 43
TRUE (263) 61
FALSE (264) 62
RETURN (265) 25 26
IF (266) 27 29
WHILE (267) 31
SWITCH (268) 34
CASE (269) 40 43
COLON (270) 40 43
SC (271) 21 22 23 24 25 26 32 34 40 43
COMMA (272) 15 49
LPAREN (273) 7 27 29 31 34 45 46 53
RPAREN (274) 7 27 29 31 34 45 46 53
LBRACE (275) 7 20 34
RBRACE (276) 7 20 34
ID (277) 7 16 21 22 23 45 46 56
NUM (278) 40 43 58 59
B (279) 43 59
STRING (280) 60
ASSIGN (281) 22 23
OR (282) 65
AND (283) 64
RELOP_EQ (284) 67
RELOP_COMP (285) 66
BINOP_ADD (286) 55
BINOP_MULT (287) 54
NOT (288) 63
ELSE (289) 29


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
Program (36)
    on left: 2, on right: 0
$@1 (37)
    on left: 1, on right: 2
Funcs (38)
    on left: 3 4, on right: 2 4
FuncDecl (39)
    on left: 7, on right: 4
$@2 (40)
    on left: 5, on right: 7
$@3 (41)
    on left: 6, on right: 7
Try (42)
    on left: 8, on right: 7
RetType (43)
    on left: 9 10, on right: 7
Formals (44)
    on left: 11 12, on right: 7
FormalsList (45)
    on left: 13 15, on right: 12 15
$@4 (46)
    on left: 14, on right: 15
FormalDecl (47)
    on left: 16, on right: 13 15
Statements (48)
    on left: 17 18, on right: 7 18 20
Statement (49)
    on left: 20 21 22 23 24 25 26 27 29 31 32 34, on right: 17 18 27
    29 31 40 43
$@5 (50)
    on left: 19, on right: 20
$@6 (51)
    on left: 28, on right: 29
$@7 (52)
    on left: 30, on right: 31
$@8 (53)
    on left: 33, on right: 34
BoolExpIf (54)
    on left: 35, on right: 27 29
CaseList (55)
    on left: 36 37, on right: 34 36
CaseStat (56)
    on left: 40 43, on right: 36 37
$@9 (57)
    on left: 38, on right: 40
$@10 (58)
    on left: 39, on right: 40
$@11 (59)
    on left: 41, on right: 43
$@12 (60)
    on left: 42, on right: 43
Call (61)
    on left: 45 46, on right: 24 57
@13 (62)
    on left: 44, on right: 45
ExpList (63)
    on left: 47 49, on right: 45 49
$@14 (64)
    on left: 48, on right: 49
Type (65)
    on left: 50 51 52, on right: 9 16 21 22
Exp (66)
    on left: 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67, on right:
    22 23 26 31 34 35 47 49 53 54 55 63 64 65 66 67
M (67)
    on left: 68, on right: 18 27 29 31 40 43 64 65
N (68)
    on left: 69, on right: 29 34


State 0

    0 $accept: . Program $end

    $default  reduce using rule 1 ($@1)

    Program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: Program . $end

    $end  shift, and go to state 3


State 2

    2 Program: $@1 . Funcs

    $end      reduce using rule 3 (Funcs)
    $default  reduce using rule 8 (Try)

    Funcs     go to state 4
    FuncDecl  go to state 5
    Try       go to state 6


State 3

    0 $accept: Program $end .

    $default  accept


State 4

    2 Program: $@1 Funcs .

    $default  reduce using rule 2 (Program)


State 5

    4 Funcs: FuncDecl . Funcs

    $end      reduce using rule 3 (Funcs)
    $default  reduce using rule 8 (Try)

    Funcs     go to state 7
    FuncDecl  go to state 5
    Try       go to state 6


State 6

    7 FuncDecl: Try . RetType ID $@2 LPAREN Formals RPAREN $@3 LBRACE Statements RBRACE

    VOID  shift, and go to state 8
    INT   shift, and go to state 9
    BYTE  shift, and go to state 10
    BOOL  shift, and go to state 11

    RetType  go to state 12
    Type     go to state 13


State 7

    4 Funcs: FuncDecl Funcs .

    $default  reduce using rule 4 (Funcs)


State 8

   10 RetType: VOID .

    $default  reduce using rule 10 (RetType)


State 9

   50 Type: INT .

    $default  reduce using rule 50 (Type)


State 10

   51 Type: BYTE .

    $default  reduce using rule 51 (Type)


State 11

   52 Type: BOOL .

    $default  reduce using rule 52 (Type)


State 12

    7 FuncDecl: Try RetType . ID $@2 LPAREN Formals RPAREN $@3 LBRACE Statements RBRACE

    ID  shift, and go to state 14


State 13

    9 RetType: Type .

    $default  reduce using rule 9 (RetType)


State 14

    7 FuncDecl: Try RetType ID . $@2 LPAREN Formals RPAREN $@3 LBRACE Statements RBRACE

    $default  reduce using rule 5 ($@2)

    $@2  go to state 15


State 15

    7 FuncDecl: Try RetType ID $@2 . LPAREN Formals RPAREN $@3 LBRACE Statements RBRACE

    LPAREN  shift, and go to state 16


State 16

    7 FuncDecl: Try RetType ID $@2 LPAREN . Formals RPAREN $@3 LBRACE Statements RBRACE

    INT   shift, and go to state 9
    BYTE  shift, and go to state 10
    BOOL  shift, and go to state 11

    $default  reduce using rule 11 (Formals)

    Formals      go to state 17
    FormalsList  go to state 18
    FormalDecl   go to state 19
    Type         go to state 20


State 17

    7 FuncDecl: Try RetType ID $@2 LPAREN Formals . RPAREN $@3 LBRACE Statements RBRACE

    RPAREN  shift, and go to state 21


State 18

   12 Formals: FormalsList .

    $default  reduce using rule 12 (Formals)


State 19

   13 FormalsList: FormalDecl .
   15            | FormalDecl . $@4 COMMA FormalsList

    COMMA     reduce using rule 14 ($@4)
    $default  reduce using rule 13 (FormalsList)

    $@4  go to state 22


State 20

   16 FormalDecl: Type . ID

    ID  shift, and go to state 23


State 21

    7 FuncDecl: Try RetType ID $@2 LPAREN Formals RPAREN . $@3 LBRACE Statements RBRACE

    $default  reduce using rule 6 ($@3)

    $@3  go to state 24


State 22

   15 FormalsList: FormalDecl $@4 . COMMA FormalsList

    COMMA  shift, and go to state 25


State 23

   16 FormalDecl: Type ID .

    $default  reduce using rule 16 (FormalDecl)


State 24

    7 FuncDecl: Try RetType ID $@2 LPAREN Formals RPAREN $@3 . LBRACE Statements RBRACE

    LBRACE  shift, and go to state 26


State 25

   15 FormalsList: FormalDecl $@4 COMMA . FormalsList

    INT   shift, and go to state 9
    BYTE  shift, and go to state 10
    BOOL  shift, and go to state 11

    FormalsList  go to state 27
    FormalDecl   go to state 19
    Type         go to state 20


State 26

    7 FuncDecl: Try RetType ID $@2 LPAREN Formals RPAREN $@3 LBRACE . Statements RBRACE

    INT     shift, and go to state 9
    BYTE    shift, and go to state 10
    BOOL    shift, and go to state 11
    BREAK   shift, and go to state 28
    RETURN  shift, and go to state 29
    IF      shift, and go to state 30
    WHILE   shift, and go to state 31
    SWITCH  shift, and go to state 32
    LBRACE  shift, and go to state 33
    ID      shift, and go to state 34

    Statements  go to state 35
    Statement   go to state 36
    Call        go to state 37
    Type        go to state 38


State 27

   15 FormalsList: FormalDecl $@4 COMMA FormalsList .

    $default  reduce using rule 15 (FormalsList)


State 28

   32 Statement: BREAK . SC

    SC  shift, and go to state 39


State 29

   25 Statement: RETURN . SC
   26          | RETURN . Exp SC

    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    SC      shift, and go to state 42
    LPAREN  shift, and go to state 43
    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    STRING  shift, and go to state 46
    NOT     shift, and go to state 47

    Call  go to state 48
    Exp   go to state 49


State 30

   27 Statement: IF . LPAREN BoolExpIf RPAREN M Statement
   29          | IF . LPAREN BoolExpIf RPAREN M Statement ELSE N $@6 M Statement

    LPAREN  shift, and go to state 50


State 31

   31 Statement: WHILE . M LPAREN Exp RPAREN $@7 M Statement

    $default  reduce using rule 68 (M)

    M  go to state 51


State 32

   34 Statement: SWITCH . LPAREN Exp N RPAREN $@8 LBRACE CaseList RBRACE SC

    LPAREN  shift, and go to state 52


State 33

   20 Statement: LBRACE . $@5 Statements RBRACE

    $default  reduce using rule 19 ($@5)

    $@5  go to state 53


State 34

   23 Statement: ID . ASSIGN Exp SC
   45 Call: ID . LPAREN @13 ExpList RPAREN
   46     | ID . LPAREN RPAREN

    LPAREN  shift, and go to state 54
    ASSIGN  shift, and go to state 55


State 35

    7 FuncDecl: Try RetType ID $@2 LPAREN Formals RPAREN $@3 LBRACE Statements . RBRACE
   18 Statements: Statements . M Statement

    RBRACE  shift, and go to state 56

    $default  reduce using rule 68 (M)

    M  go to state 57


State 36

   17 Statements: Statement .

    $default  reduce using rule 17 (Statements)


State 37

   24 Statement: Call . SC

    SC  shift, and go to state 58


State 38

   21 Statement: Type . ID SC
   22          | Type . ID ASSIGN Exp SC

    ID  shift, and go to state 59


State 39

   32 Statement: BREAK SC .

    $default  reduce using rule 32 (Statement)


State 40

   61 Exp: TRUE .

    $default  reduce using rule 61 (Exp)


State 41

   62 Exp: FALSE .

    $default  reduce using rule 62 (Exp)


State 42

   25 Statement: RETURN SC .

    $default  reduce using rule 25 (Statement)


State 43

   53 Exp: LPAREN . Exp RPAREN

    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    LPAREN  shift, and go to state 43
    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    STRING  shift, and go to state 46
    NOT     shift, and go to state 47

    Call  go to state 48
    Exp   go to state 60


State 44

   45 Call: ID . LPAREN @13 ExpList RPAREN
   46     | ID . LPAREN RPAREN
   56 Exp: ID .

    LPAREN  shift, and go to state 54

    $default  reduce using rule 56 (Exp)


State 45

   58 Exp: NUM .
   59    | NUM . B

    B  shift, and go to state 61

    $default  reduce using rule 58 (Exp)


State 46

   60 Exp: STRING .

    $default  reduce using rule 60 (Exp)


State 47

   63 Exp: NOT . Exp

    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    LPAREN  shift, and go to state 43
    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    STRING  shift, and go to state 46
    NOT     shift, and go to state 47

    Call  go to state 48
    Exp   go to state 62


State 48

   57 Exp: Call .

    $default  reduce using rule 57 (Exp)


State 49

   26 Statement: RETURN Exp . SC
   54 Exp: Exp . BINOP_MULT Exp
   55    | Exp . BINOP_ADD Exp
   64    | Exp . AND M Exp
   65    | Exp . OR M Exp
   66    | Exp . RELOP_COMP Exp
   67    | Exp . RELOP_EQ Exp

    SC          shift, and go to state 63
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    RELOP_EQ    shift, and go to state 66
    RELOP_COMP  shift, and go to state 67
    BINOP_ADD   shift, and go to state 68
    BINOP_MULT  shift, and go to state 69


State 50

   27 Statement: IF LPAREN . BoolExpIf RPAREN M Statement
   29          | IF LPAREN . BoolExpIf RPAREN M Statement ELSE N $@6 M Statement

    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    LPAREN  shift, and go to state 43
    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    STRING  shift, and go to state 46
    NOT     shift, and go to state 47

    BoolExpIf  go to state 70
    Call       go to state 48
    Exp        go to state 71


State 51

   31 Statement: WHILE M . LPAREN Exp RPAREN $@7 M Statement

    LPAREN  shift, and go to state 72


State 52

   34 Statement: SWITCH LPAREN . Exp N RPAREN $@8 LBRACE CaseList RBRACE SC

    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    LPAREN  shift, and go to state 43
    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    STRING  shift, and go to state 46
    NOT     shift, and go to state 47

    Call  go to state 48
    Exp   go to state 73


State 53

   20 Statement: LBRACE $@5 . Statements RBRACE

    INT     shift, and go to state 9
    BYTE    shift, and go to state 10
    BOOL    shift, and go to state 11
    BREAK   shift, and go to state 28
    RETURN  shift, and go to state 29
    IF      shift, and go to state 30
    WHILE   shift, and go to state 31
    SWITCH  shift, and go to state 32
    LBRACE  shift, and go to state 33
    ID      shift, and go to state 34

    Statements  go to state 74
    Statement   go to state 36
    Call        go to state 37
    Type        go to state 38


State 54

   45 Call: ID LPAREN . @13 ExpList RPAREN
   46     | ID LPAREN . RPAREN

    RPAREN  shift, and go to state 75

    $default  reduce using rule 44 (@13)

    @13  go to state 76


State 55

   23 Statement: ID ASSIGN . Exp SC

    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    LPAREN  shift, and go to state 43
    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    STRING  shift, and go to state 46
    NOT     shift, and go to state 47

    Call  go to state 48
    Exp   go to state 77


State 56

    7 FuncDecl: Try RetType ID $@2 LPAREN Formals RPAREN $@3 LBRACE Statements RBRACE .

    $default  reduce using rule 7 (FuncDecl)


State 57

   18 Statements: Statements M . Statement

    INT     shift, and go to state 9
    BYTE    shift, and go to state 10
    BOOL    shift, and go to state 11
    BREAK   shift, and go to state 28
    RETURN  shift, and go to state 29
    IF      shift, and go to state 30
    WHILE   shift, and go to state 31
    SWITCH  shift, and go to state 32
    LBRACE  shift, and go to state 33
    ID      shift, and go to state 34

    Statement  go to state 78
    Call       go to state 37
    Type       go to state 38


State 58

   24 Statement: Call SC .

    $default  reduce using rule 24 (Statement)


State 59

   21 Statement: Type ID . SC
   22          | Type ID . ASSIGN Exp SC

    SC      shift, and go to state 79
    ASSIGN  shift, and go to state 80


State 60

   53 Exp: LPAREN Exp . RPAREN
   54    | Exp . BINOP_MULT Exp
   55    | Exp . BINOP_ADD Exp
   64    | Exp . AND M Exp
   65    | Exp . OR M Exp
   66    | Exp . RELOP_COMP Exp
   67    | Exp . RELOP_EQ Exp

    RPAREN      shift, and go to state 81
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    RELOP_EQ    shift, and go to state 66
    RELOP_COMP  shift, and go to state 67
    BINOP_ADD   shift, and go to state 68
    BINOP_MULT  shift, and go to state 69


State 61

   59 Exp: NUM B .

    $default  reduce using rule 59 (Exp)


State 62

   54 Exp: Exp . BINOP_MULT Exp
   55    | Exp . BINOP_ADD Exp
   63    | NOT Exp .
   64    | Exp . AND M Exp
   65    | Exp . OR M Exp
   66    | Exp . RELOP_COMP Exp
   67    | Exp . RELOP_EQ Exp

    $default  reduce using rule 63 (Exp)


State 63

   26 Statement: RETURN Exp SC .

    $default  reduce using rule 26 (Statement)


State 64

   65 Exp: Exp OR . M Exp

    $default  reduce using rule 68 (M)

    M  go to state 82


State 65

   64 Exp: Exp AND . M Exp

    $default  reduce using rule 68 (M)

    M  go to state 83


State 66

   67 Exp: Exp RELOP_EQ . Exp

    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    LPAREN  shift, and go to state 43
    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    STRING  shift, and go to state 46
    NOT     shift, and go to state 47

    Call  go to state 48
    Exp   go to state 84


State 67

   66 Exp: Exp RELOP_COMP . Exp

    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    LPAREN  shift, and go to state 43
    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    STRING  shift, and go to state 46
    NOT     shift, and go to state 47

    Call  go to state 48
    Exp   go to state 85


State 68

   55 Exp: Exp BINOP_ADD . Exp

    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    LPAREN  shift, and go to state 43
    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    STRING  shift, and go to state 46
    NOT     shift, and go to state 47

    Call  go to state 48
    Exp   go to state 86


State 69

   54 Exp: Exp BINOP_MULT . Exp

    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    LPAREN  shift, and go to state 43
    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    STRING  shift, and go to state 46
    NOT     shift, and go to state 47

    Call  go to state 48
    Exp   go to state 87


State 70

   27 Statement: IF LPAREN BoolExpIf . RPAREN M Statement
   29          | IF LPAREN BoolExpIf . RPAREN M Statement ELSE N $@6 M Statement

    RPAREN  shift, and go to state 88


State 71

   35 BoolExpIf: Exp .
   54 Exp: Exp . BINOP_MULT Exp
   55    | Exp . BINOP_ADD Exp
   64    | Exp . AND M Exp
   65    | Exp . OR M Exp
   66    | Exp . RELOP_COMP Exp
   67    | Exp . RELOP_EQ Exp

    OR          shift, and go to state 64
    AND         shift, and go to state 65
    RELOP_EQ    shift, and go to state 66
    RELOP_COMP  shift, and go to state 67
    BINOP_ADD   shift, and go to state 68
    BINOP_MULT  shift, and go to state 69

    $default  reduce using rule 35 (BoolExpIf)


State 72

   31 Statement: WHILE M LPAREN . Exp RPAREN $@7 M Statement

    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    LPAREN  shift, and go to state 43
    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    STRING  shift, and go to state 46
    NOT     shift, and go to state 47

    Call  go to state 48
    Exp   go to state 89


State 73

   34 Statement: SWITCH LPAREN Exp . N RPAREN $@8 LBRACE CaseList RBRACE SC
   54 Exp: Exp . BINOP_MULT Exp
   55    | Exp . BINOP_ADD Exp
   64    | Exp . AND M Exp
   65    | Exp . OR M Exp
   66    | Exp . RELOP_COMP Exp
   67    | Exp . RELOP_EQ Exp

    OR          shift, and go to state 64
    AND         shift, and go to state 65
    RELOP_EQ    shift, and go to state 66
    RELOP_COMP  shift, and go to state 67
    BINOP_ADD   shift, and go to state 68
    BINOP_MULT  shift, and go to state 69

    $default  reduce using rule 69 (N)

    N  go to state 90


State 74

   18 Statements: Statements . M Statement
   20 Statement: LBRACE $@5 Statements . RBRACE

    RBRACE  shift, and go to state 91

    $default  reduce using rule 68 (M)

    M  go to state 57


State 75

   46 Call: ID LPAREN RPAREN .

    $default  reduce using rule 46 (Call)


State 76

   45 Call: ID LPAREN @13 . ExpList RPAREN

    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    LPAREN  shift, and go to state 43
    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    STRING  shift, and go to state 46
    NOT     shift, and go to state 47

    Call     go to state 48
    ExpList  go to state 92
    Exp      go to state 93


State 77

   23 Statement: ID ASSIGN Exp . SC
   54 Exp: Exp . BINOP_MULT Exp
   55    | Exp . BINOP_ADD Exp
   64    | Exp . AND M Exp
   65    | Exp . OR M Exp
   66    | Exp . RELOP_COMP Exp
   67    | Exp . RELOP_EQ Exp

    SC          shift, and go to state 94
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    RELOP_EQ    shift, and go to state 66
    RELOP_COMP  shift, and go to state 67
    BINOP_ADD   shift, and go to state 68
    BINOP_MULT  shift, and go to state 69


State 78

   18 Statements: Statements M Statement .

    $default  reduce using rule 18 (Statements)


State 79

   21 Statement: Type ID SC .

    $default  reduce using rule 21 (Statement)


State 80

   22 Statement: Type ID ASSIGN . Exp SC

    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    LPAREN  shift, and go to state 43
    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    STRING  shift, and go to state 46
    NOT     shift, and go to state 47

    Call  go to state 48
    Exp   go to state 95


State 81

   53 Exp: LPAREN Exp RPAREN .

    $default  reduce using rule 53 (Exp)


State 82

   65 Exp: Exp OR M . Exp

    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    LPAREN  shift, and go to state 43
    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    STRING  shift, and go to state 46
    NOT     shift, and go to state 47

    Call  go to state 48
    Exp   go to state 96


State 83

   64 Exp: Exp AND M . Exp

    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    LPAREN  shift, and go to state 43
    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    STRING  shift, and go to state 46
    NOT     shift, and go to state 47

    Call  go to state 48
    Exp   go to state 97


State 84

   54 Exp: Exp . BINOP_MULT Exp
   55    | Exp . BINOP_ADD Exp
   64    | Exp . AND M Exp
   65    | Exp . OR M Exp
   66    | Exp . RELOP_COMP Exp
   67    | Exp . RELOP_EQ Exp
   67    | Exp RELOP_EQ Exp .

    RELOP_COMP  shift, and go to state 67
    BINOP_ADD   shift, and go to state 68
    BINOP_MULT  shift, and go to state 69

    $default  reduce using rule 67 (Exp)


State 85

   54 Exp: Exp . BINOP_MULT Exp
   55    | Exp . BINOP_ADD Exp
   64    | Exp . AND M Exp
   65    | Exp . OR M Exp
   66    | Exp . RELOP_COMP Exp
   66    | Exp RELOP_COMP Exp .
   67    | Exp . RELOP_EQ Exp

    BINOP_ADD   shift, and go to state 68
    BINOP_MULT  shift, and go to state 69

    $default  reduce using rule 66 (Exp)


State 86

   54 Exp: Exp . BINOP_MULT Exp
   55    | Exp . BINOP_ADD Exp
   55    | Exp BINOP_ADD Exp .
   64    | Exp . AND M Exp
   65    | Exp . OR M Exp
   66    | Exp . RELOP_COMP Exp
   67    | Exp . RELOP_EQ Exp

    BINOP_MULT  shift, and go to state 69

    $default  reduce using rule 55 (Exp)


State 87

   54 Exp: Exp . BINOP_MULT Exp
   54    | Exp BINOP_MULT Exp .
   55    | Exp . BINOP_ADD Exp
   64    | Exp . AND M Exp
   65    | Exp . OR M Exp
   66    | Exp . RELOP_COMP Exp
   67    | Exp . RELOP_EQ Exp

    $default  reduce using rule 54 (Exp)


State 88

   27 Statement: IF LPAREN BoolExpIf RPAREN . M Statement
   29          | IF LPAREN BoolExpIf RPAREN . M Statement ELSE N $@6 M Statement

    $default  reduce using rule 68 (M)

    M  go to state 98


State 89

   31 Statement: WHILE M LPAREN Exp . RPAREN $@7 M Statement
   54 Exp: Exp . BINOP_MULT Exp
   55    | Exp . BINOP_ADD Exp
   64    | Exp . AND M Exp
   65    | Exp . OR M Exp
   66    | Exp . RELOP_COMP Exp
   67    | Exp . RELOP_EQ Exp

    RPAREN      shift, and go to state 99
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    RELOP_EQ    shift, and go to state 66
    RELOP_COMP  shift, and go to state 67
    BINOP_ADD   shift, and go to state 68
    BINOP_MULT  shift, and go to state 69


State 90

   34 Statement: SWITCH LPAREN Exp N . RPAREN $@8 LBRACE CaseList RBRACE SC

    RPAREN  shift, and go to state 100


State 91

   20 Statement: LBRACE $@5 Statements RBRACE .

    $default  reduce using rule 20 (Statement)


State 92

   45 Call: ID LPAREN @13 ExpList . RPAREN

    RPAREN  shift, and go to state 101


State 93

   47 ExpList: Exp .
   49        | Exp . $@14 COMMA ExpList
   54 Exp: Exp . BINOP_MULT Exp
   55    | Exp . BINOP_ADD Exp
   64    | Exp . AND M Exp
   65    | Exp . OR M Exp
   66    | Exp . RELOP_COMP Exp
   67    | Exp . RELOP_EQ Exp

    OR          shift, and go to state 64
    AND         shift, and go to state 65
    RELOP_EQ    shift, and go to state 66
    RELOP_COMP  shift, and go to state 67
    BINOP_ADD   shift, and go to state 68
    BINOP_MULT  shift, and go to state 69

    COMMA     reduce using rule 48 ($@14)
    $default  reduce using rule 47 (ExpList)

    $@14  go to state 102


State 94

   23 Statement: ID ASSIGN Exp SC .

    $default  reduce using rule 23 (Statement)


State 95

   22 Statement: Type ID ASSIGN Exp . SC
   54 Exp: Exp . BINOP_MULT Exp
   55    | Exp . BINOP_ADD Exp
   64    | Exp . AND M Exp
   65    | Exp . OR M Exp
   66    | Exp . RELOP_COMP Exp
   67    | Exp . RELOP_EQ Exp

    SC          shift, and go to state 103
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    RELOP_EQ    shift, and go to state 66
    RELOP_COMP  shift, and go to state 67
    BINOP_ADD   shift, and go to state 68
    BINOP_MULT  shift, and go to state 69


State 96

   54 Exp: Exp . BINOP_MULT Exp
   55    | Exp . BINOP_ADD Exp
   64    | Exp . AND M Exp
   65    | Exp . OR M Exp
   65    | Exp OR M Exp .
   66    | Exp . RELOP_COMP Exp
   67    | Exp . RELOP_EQ Exp

    AND         shift, and go to state 65
    RELOP_EQ    shift, and go to state 66
    RELOP_COMP  shift, and go to state 67
    BINOP_ADD   shift, and go to state 68
    BINOP_MULT  shift, and go to state 69

    $default  reduce using rule 65 (Exp)


State 97

   54 Exp: Exp . BINOP_MULT Exp
   55    | Exp . BINOP_ADD Exp
   64    | Exp . AND M Exp
   64    | Exp AND M Exp .
   65    | Exp . OR M Exp
   66    | Exp . RELOP_COMP Exp
   67    | Exp . RELOP_EQ Exp

    RELOP_EQ    shift, and go to state 66
    RELOP_COMP  shift, and go to state 67
    BINOP_ADD   shift, and go to state 68
    BINOP_MULT  shift, and go to state 69

    $default  reduce using rule 64 (Exp)


State 98

   27 Statement: IF LPAREN BoolExpIf RPAREN M . Statement
   29          | IF LPAREN BoolExpIf RPAREN M . Statement ELSE N $@6 M Statement

    INT     shift, and go to state 9
    BYTE    shift, and go to state 10
    BOOL    shift, and go to state 11
    BREAK   shift, and go to state 28
    RETURN  shift, and go to state 29
    IF      shift, and go to state 30
    WHILE   shift, and go to state 31
    SWITCH  shift, and go to state 32
    LBRACE  shift, and go to state 33
    ID      shift, and go to state 34

    Statement  go to state 104
    Call       go to state 37
    Type       go to state 38


State 99

   31 Statement: WHILE M LPAREN Exp RPAREN . $@7 M Statement

    $default  reduce using rule 30 ($@7)

    $@7  go to state 105


State 100

   34 Statement: SWITCH LPAREN Exp N RPAREN . $@8 LBRACE CaseList RBRACE SC

    $default  reduce using rule 33 ($@8)

    $@8  go to state 106


State 101

   45 Call: ID LPAREN @13 ExpList RPAREN .

    $default  reduce using rule 45 (Call)


State 102

   49 ExpList: Exp $@14 . COMMA ExpList

    COMMA  shift, and go to state 107


State 103

   22 Statement: Type ID ASSIGN Exp SC .

    $default  reduce using rule 22 (Statement)


State 104

   27 Statement: IF LPAREN BoolExpIf RPAREN M Statement .
   29          | IF LPAREN BoolExpIf RPAREN M Statement . ELSE N $@6 M Statement

    ELSE  shift, and go to state 108

    $default  reduce using rule 27 (Statement)


State 105

   31 Statement: WHILE M LPAREN Exp RPAREN $@7 . M Statement

    $default  reduce using rule 68 (M)

    M  go to state 109


State 106

   34 Statement: SWITCH LPAREN Exp N RPAREN $@8 . LBRACE CaseList RBRACE SC

    LBRACE  shift, and go to state 110


State 107

   49 ExpList: Exp $@14 COMMA . ExpList

    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    LPAREN  shift, and go to state 43
    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    STRING  shift, and go to state 46
    NOT     shift, and go to state 47

    Call     go to state 48
    ExpList  go to state 111
    Exp      go to state 93


State 108

   29 Statement: IF LPAREN BoolExpIf RPAREN M Statement ELSE . N $@6 M Statement

    $default  reduce using rule 69 (N)

    N  go to state 112


State 109

   31 Statement: WHILE M LPAREN Exp RPAREN $@7 M . Statement

    INT     shift, and go to state 9
    BYTE    shift, and go to state 10
    BOOL    shift, and go to state 11
    BREAK   shift, and go to state 28
    RETURN  shift, and go to state 29
    IF      shift, and go to state 30
    WHILE   shift, and go to state 31
    SWITCH  shift, and go to state 32
    LBRACE  shift, and go to state 33
    ID      shift, and go to state 34

    Statement  go to state 113
    Call       go to state 37
    Type       go to state 38


State 110

   34 Statement: SWITCH LPAREN Exp N RPAREN $@8 LBRACE . CaseList RBRACE SC

    CASE  shift, and go to state 114

    CaseList  go to state 115
    CaseStat  go to state 116


State 111

   49 ExpList: Exp $@14 COMMA ExpList .

    $default  reduce using rule 49 (ExpList)


State 112

   29 Statement: IF LPAREN BoolExpIf RPAREN M Statement ELSE N . $@6 M Statement

    $default  reduce using rule 28 ($@6)

    $@6  go to state 117


State 113

   31 Statement: WHILE M LPAREN Exp RPAREN $@7 M Statement .

    $default  reduce using rule 31 (Statement)


State 114

   40 CaseStat: CASE . NUM COLON $@9 M Statement $@10 BREAK SC
   43         | CASE . NUM B $@11 COLON M Statement $@12 BREAK SC

    NUM  shift, and go to state 118


State 115

   34 Statement: SWITCH LPAREN Exp N RPAREN $@8 LBRACE CaseList . RBRACE SC

    RBRACE  shift, and go to state 119


State 116

   36 CaseList: CaseStat . CaseList
   37         | CaseStat .

    CASE  shift, and go to state 114

    $default  reduce using rule 37 (CaseList)

    CaseList  go to state 120
    CaseStat  go to state 116


State 117

   29 Statement: IF LPAREN BoolExpIf RPAREN M Statement ELSE N $@6 . M Statement

    $default  reduce using rule 68 (M)

    M  go to state 121


State 118

   40 CaseStat: CASE NUM . COLON $@9 M Statement $@10 BREAK SC
   43         | CASE NUM . B $@11 COLON M Statement $@12 BREAK SC

    COLON  shift, and go to state 122
    B      shift, and go to state 123


State 119

   34 Statement: SWITCH LPAREN Exp N RPAREN $@8 LBRACE CaseList RBRACE . SC

    SC  shift, and go to state 124


State 120

   36 CaseList: CaseStat CaseList .

    $default  reduce using rule 36 (CaseList)


State 121

   29 Statement: IF LPAREN BoolExpIf RPAREN M Statement ELSE N $@6 M . Statement

    INT     shift, and go to state 9
    BYTE    shift, and go to state 10
    BOOL    shift, and go to state 11
    BREAK   shift, and go to state 28
    RETURN  shift, and go to state 29
    IF      shift, and go to state 30
    WHILE   shift, and go to state 31
    SWITCH  shift, and go to state 32
    LBRACE  shift, and go to state 33
    ID      shift, and go to state 34

    Statement  go to state 125
    Call       go to state 37
    Type       go to state 38


State 122

   40 CaseStat: CASE NUM COLON . $@9 M Statement $@10 BREAK SC

    $default  reduce using rule 38 ($@9)

    $@9  go to state 126


State 123

   43 CaseStat: CASE NUM B . $@11 COLON M Statement $@12 BREAK SC

    $default  reduce using rule 41 ($@11)

    $@11  go to state 127


State 124

   34 Statement: SWITCH LPAREN Exp N RPAREN $@8 LBRACE CaseList RBRACE SC .

    $default  reduce using rule 34 (Statement)


State 125

   29 Statement: IF LPAREN BoolExpIf RPAREN M Statement ELSE N $@6 M Statement .

    $default  reduce using rule 29 (Statement)


State 126

   40 CaseStat: CASE NUM COLON $@9 . M Statement $@10 BREAK SC

    $default  reduce using rule 68 (M)

    M  go to state 128


State 127

   43 CaseStat: CASE NUM B $@11 . COLON M Statement $@12 BREAK SC

    COLON  shift, and go to state 129


State 128

   40 CaseStat: CASE NUM COLON $@9 M . Statement $@10 BREAK SC

    INT     shift, and go to state 9
    BYTE    shift, and go to state 10
    BOOL    shift, and go to state 11
    BREAK   shift, and go to state 28
    RETURN  shift, and go to state 29
    IF      shift, and go to state 30
    WHILE   shift, and go to state 31
    SWITCH  shift, and go to state 32
    LBRACE  shift, and go to state 33
    ID      shift, and go to state 34

    Statement  go to state 130
    Call       go to state 37
    Type       go to state 38


State 129

   43 CaseStat: CASE NUM B $@11 COLON . M Statement $@12 BREAK SC

    $default  reduce using rule 68 (M)

    M  go to state 131


State 130

   40 CaseStat: CASE NUM COLON $@9 M Statement . $@10 BREAK SC

    $default  reduce using rule 39 ($@10)

    $@10  go to state 132


State 131

   43 CaseStat: CASE NUM B $@11 COLON M . Statement $@12 BREAK SC

    INT     shift, and go to state 9
    BYTE    shift, and go to state 10
    BOOL    shift, and go to state 11
    BREAK   shift, and go to state 28
    RETURN  shift, and go to state 29
    IF      shift, and go to state 30
    WHILE   shift, and go to state 31
    SWITCH  shift, and go to state 32
    LBRACE  shift, and go to state 33
    ID      shift, and go to state 34

    Statement  go to state 133
    Call       go to state 37
    Type       go to state 38


State 132

   40 CaseStat: CASE NUM COLON $@9 M Statement $@10 . BREAK SC

    BREAK  shift, and go to state 134


State 133

   43 CaseStat: CASE NUM B $@11 COLON M Statement . $@12 BREAK SC

    $default  reduce using rule 42 ($@12)

    $@12  go to state 135


State 134

   40 CaseStat: CASE NUM COLON $@9 M Statement $@10 BREAK . SC

    SC  shift, and go to state 136


State 135

   43 CaseStat: CASE NUM B $@11 COLON M Statement $@12 . BREAK SC

    BREAK  shift, and go to state 137


State 136

   40 CaseStat: CASE NUM COLON $@9 M Statement $@10 BREAK SC .

    $default  reduce using rule 40 (CaseStat)


State 137

   43 CaseStat: CASE NUM B $@11 COLON M Statement $@12 BREAK . SC

    SC  shift, and go to state 138


State 138

   43 CaseStat: CASE NUM B $@11 COLON M Statement $@12 BREAK SC .

    $default  reduce using rule 43 (CaseStat)
